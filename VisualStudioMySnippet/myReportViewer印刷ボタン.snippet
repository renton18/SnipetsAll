<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets
    xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>印刷ボタン</Title>
      <Shortcut>myReportViewer</Shortcut>
    </Header>
    <Snippet>
      <Code Language="cSharp">
        <![CDATA[#region 印刷ボタン
        /// <summary>
        /// 印刷処理
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void btnPrint_Click(object sender, EventArgs e)
        {
            ////////////////////////////////////////////////////////////////////////////////
            // ラジオボタンがある場合
            ////////////////////////////////////////////////////////////////////////////////
            var OnRb = groupPrint.Controls.OfType<RadioButton>().SingleOrDefault(rb => rb.Checked == true);
            var sql = "";
            switch (OnRb.Text)
            {
                case "編集済":
                    sql = "";
                    break;

                case "依頼項目要確認":
                    sql = "";
                    break;
            }
            ////////////////////////////////////////////////////////////////////////////////
            // レポートデータを取得する
            ////////////////////////////////////////////////////////////////////////////////
            DataTable dt = new DataTable();
            try
            {
                SQLSERVER TRUST = new SQLSERVER(COMMON.TRUSTConnection);
                TRUST.Open();
                dt = TRUST.Select(sql);
                TRUST.Close();
            }
            catch (Exception ex)
            {
                SQLSERVERHelper.Log("1", ex.Message, "オーダ受信", sql, "NoLoginUser");
            }
            ////////////////////////////////////////////////////////////////////////////////
            // ①レポートビューア表示 & 印刷
            ////////////////////////////////////////////////////////////////////////////////
            ////////////////////////////////////////////////////////////////////////////////
            //【表示】ReportViewer
            //////////////////////////////////////////////////////////////////////////////
            reportViewer1.Reset();
            reportViewer1.ProcessingMode = ProcessingMode.Local;
            reportViewer1.LocalReport.ReportEmbeddedResource = reportName;
            reportViewer1.LocalReport.ReportPath = reportName;
            reportViewer1.SetDisplayMode(DisplayMode.PrintLayout);
            reportViewer1.LocalReport.DataSources.Add(new ReportDataSource("DataSet1", dt));
            //パラメータを追加する
            var reportParams = new List<ReportParameter>();
            reportParams.Add(new ReportParameter("FileDate", filedate));
            reportViewer1.LocalReport.SetParameters(reportParams);
            reportViewer1.RefreshReport();
            
            ReportViewerHelper rvh = new ReportViewerHelper(COMMON.ListPrinter, true);
            rvh.Run(reportViewer1.LocalReport);
            rvh.Dispose();
            
            ////////////////////////////////////////////////////////////////////////////////
            // ②直接印刷
            ////////////////////////////////////////////////////////////////////////////////
            ReportViewerHelper rvh = new ReportViewerHelper(COMMON.ListPrinter, true);
            //パラメータを追加する
            var reportParams = new List<ReportParameter>();
            reportParams.Add(new ReportParameter("FileDate", filedate));
            rvh.Run("REPORT/Report.rdlc", dt, "DataSet1", reportParams);
            rvh.Dispose();

            ////////////////////////////////////////////////////////////////////////////////
            // ③レポップアッププレビューを表示して印刷
            ////////////////////////////////////////////////////////////////////////////////
            //追加予定
        }
        #endregion]]>
      </Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>